/**
 * Java.Надомная Работа3
 *
 * @автор Вреж Саргсян
 * @версия 15.11.2021
 */

импорт java.util.Случайный;
импорт java.util.Сканер;

     урок открытого класса3 {
        общий статический  РАЗМЕР int = 3;
        публичный статический int DOTS_TO_WIN = 3;
        публичный статический конечный символ DOT_EMPTY = '•';
        публичный статический конечный символ DOT_X = 'X';
        публичный статический конечный символ DOT_O = 'O';
        публичный статический символ[][] карта;
        общедоступный статический сканер sc = новый сканер(System.in);
        публичный статический случайный ранд = новый случайный();
        публичная статическая пустота main(строка[] args) {
 initMap();
 Карта печати();
            в то время как (верно) {
 Человеческий фактор();
 Карта печати();
                если (checkWin(DOT_X)) {
                    System.out.println("Ты победил!");
                    перерыв;
                }
                если (isMapFull()) {
                    System.out.println("Ничья");
                    перерыв;
                }
 айТурн();
 Карта печати();
                если (checkWin(DOT_O)) {
                    System.out.println("Слабее");
                    перерыв;
                }
                если (isMapFull()) {
                    System.out.println("Ничья");
                    перерыв;
                }
            }
            System.out.println("Игра окончена");
        }
        публичная статическая логическая проверка(символ символа) {
            для (int i = 0; i < РАЗМЕР; i++) {
                если((карта[i][0] == символ и& карта[i][1] == символ и& карта[i][2] == символ) ||
 (карта[0][i] == символ и карта[1][i] == символ и карта[2][i] == символ)) возвращает значение true;
            }
            if (карта[0][0] == символ и карта[1][1] == символ и карта[2][2] == символ) возвращает значение true;
            if (карта[2][0] == символ и карта[1][1] == символ и карта[0][2] == символ) возвращает значение true;
            вернуть false;
        }
        общедоступное статическое логическое значение isMapFull() {
            для (int i = 0; i < РАЗМЕР; i++) {
                для (int j = 0; j < РАЗМЕР; j++) {
                    if (карта[i][j] == DOT_EMPTY) возвращает false;
                }
            }
            верните значение true;
        }
        публичная статическая пустота aiTurn() {
            int x, y;
            сделай {
 x = rand.СЛЕДУЮЩИЙ шаг(РАЗМЕР);
 y = rand.nextInt(РАЗМЕР);
 } в то время как (!Значение ячейки(x, y));
            System.out.println("Твоя очередь " + (x + 1) + " " + (y + 1));
 карта[y][x] = ТОЧКА_О;
        }
        публичная статическая пустая человеческая жизнь() {
            int x, y;
            сделай {
                System.out.println("Введите координаты в формате X Y");
 x = sc.nextInt() - 1;
 y = sc.nextInt() - 1;
 } в то время как (!isCellValid(x, y)); // в то время как(isCellValid(x, y) == ложь)
 карта[y][x] = ТОЧКА_X;
        }
        публичное статическое логическое значениеisCellValid(int x, int y) {
            if (x < 0 || x >=> РАЗМЕР || y < 0 || y >=> РАЗМЕР) возвращает false;
            if (map[y][x] == DOT_EMPTY) возвращает значение true;
            вернуть false;
        }
        публичная статическая пустота initMap() {
 карта = новый символ[РАЗМЕР][РАЗМЕР];
            для (int i = 0; i < РАЗМЕР; i++) {
                для (int j = 0; j < РАЗМЕР; j++) {
 карта[i][j] = ПУСТАЯ ТОЧКА;
                }
            }
        }
        общедоступная статическая пустая карта печати() {
            для (int i = 0; i <= РАЗМЕР; i++) {
                System.out.печать(i + " ");
            }
            System.out.println();
            для (int i = 0; i < РАЗМЕР; i++) {
                System.out.печать((i + 1) + " ");
                для (int j = 0; j < РАЗМЕР; j++) {
                    System.out.print(карта[i][j] + " ");
                }
                System.out.println();
            }
            System.out.println();
        }
    }
